<html>
  <head>
    <title>Execution Engine Overview</title>
    <meta name="subtitle" content="What is the Inedo Execution Engine?" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="execution engine" />
    <meta name="sequence" content="10" />
  </head>
  <body>

    <p>
        Our products incorporate a shared component called the Inedo Execution Engine. This allows you to automate and orchestrate infrastructure in a consistent way across our products, making it easy to:
    </p>
     <ul class="docs">
         <li>
             deploy and execute commands across hundreds of servers, simultaneously as needed
         </li>
         <li>
             quickly identify what went wrong, using detailed logging with sensitive debugging details hidden from certain users
         </li>
         <li>
             use a powerful, but easy-to-learn language called OtterScript while leveraging existing PowerShell and Shell scripts and snippets as needed
         </li>
     </ul>
      <p>
          As we learned from years of first hand-experience with BuildMaster's <a href="https://inedo.com/support/kb/1118/legacy-plans-in-buildmaster-50" target="_blank">legacy execution engine</a>, there are a lot of "real-world oddities" that you encounter when writing code that will automate and orchestrate infrastructure, such as:
      </p>
      <ul class="docs">
          <li>
              Sometimes, some things will just work if you retry them a few times in a row
          </li>
          <li>
              A "failure" isn't always a failure, but it's important to know
          </li>
          <li>
              "Impossible" failures happen all the time
          </li>
      </ul>
     <p>
         We designed the Inedo Execution Engine from the ground-up to take these, and many more things into consideration --- including lots of research on how many other tools perform automation.
     </p>

  </body>
</html>
