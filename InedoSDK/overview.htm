<html>
  <head>
    <title>Inedo SDK Overview</title>
    <meta name="subtitle" content="What is the Inedo SDK?" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="sdk" />
    <meta name="sequence" content="10" />
  </head>
  <body>

      <p>
          A lot of Inedo's product functionality is delivered through extensions, a type of pluggable component library that provides both core capabilities as well as integrations with third-party tools. With the Inedo SDK, you can add or modify functionality and capabilities to the product by <a href="/support/documentation/inedosdk/extending/creating">creating an extension</a>.
      </p>

      <p>
          Many of the same components can be used different products, which means you can write a component once and introduce the same functionality across all of our products. Here's what you can extend:
      </p>

      <table>
          <tr>
              <th></th>
              <td><strong>PG</strong></td>
              <td><strong>HH</strong></td>
              <td><strong>OT</strong></td>
              <td><strong>BM</strong></td>
              <th></th>
          </tr>
          <tr>
              <th>Configuration</th>
              <td>&#10007;</td>
              <td>&#10004;*</td>
              <td>&#10004;</td>
              <td>&#10004;*</td>
              <td>
                  A representation of a specific type of server configuration (such as the settings for an IIS Application Pool, or a directory on disk) that is used to store information collected from a server (Otter only) or as a template for desired configuration.
              </td>
          </tr>
          <tr>
              <th>Credential</th>
              <td>&#10004;*</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>
                  A secret with secure fields that is stored in an encrypted manner. In ProGet, these are currently only used by the AD User Directory.
              </td>
          </tr>
          <tr>
              <th>File System</th>
              <td>&#10004;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>
                  Used by ProGet to access the underlying storage medium for package data. The default implementation uses a directory on disk.
              </td>
          </tr>
          <tr>
              <th>Issue Source</th>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>&#10004;</td>
              <td>
                  Provides a list of issues from an external source, such as Jira.
              </td>
          </tr>
          <tr>
              <th>List Variable Source</th>
              <td>&#10007;</td>
              <td>&#10004;</td>
              <td>&#10007;</td>
              <td>&#10004;</td>
              <td>
                  Provides a dynamic list for the user interface; currently used in Release templates.
              </td>
          </tr>
          <tr>
              <th>Operation</th>
              <td>&#10007;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>
                  A discrete task that is executed by the OtterScript runtime.
              </td>
          </tr>
          <tr>
              <th>Package Access Rule</th>
              <td>&#10004;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>
                  Allows for rules to block downloads of packages based on additional logic.
              </td>
          </tr>
          <tr>
              <th>Package Filter</th>
              <td>&#10004;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>
                  Allows all locally-stored ProGet packages to be filtered from being shown in feeds by additional logic.
              </td>
          </tr>
          <tr>
              <th>Raft Repository</th>
              <td>&#10007;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>
                  A self-contained abstract file system that is used as a backing store for plans, assets, and other files.
              </td>
          </tr>
          <tr>
              <th>User Directory</th>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>
                  Responsible for authenticating users and groups. The default implementation uses users and groups stored in the product's database.
              </td>
          </tr>
          <tr>
              <th>Variable Function</th>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>&#10004;</td>
              <td>
                  Used in plans to provide or manipulate values.
              </td>
          </tr>
          <tr>
              <th>Vulnerability Source</th>
              <td>&#10004;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>&#10007;</td>
              <td>
                  Pulls a list of known security vulnerabilities for packages from a third-party source.
              </td>
          </tr>
      </table>

  </body>
</html>