<html>
<head>
    <title>Builds in BuildMaster</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="buildmaster, builds" />
    <meta name="show-headings-in-nav" content="true" />
    <meta name="sequence" content="100" />
</head>
<body>
    <p>
        A build in BuildMaster is the fundamental unit of deployment
        under the context of a <a href="/docs/buildmaster/releases/overview">release</a> that advances through a sequence of pipeline
        stages in order to effectively deploy a release. Its components may consist of any
        or all of the following:
    </p>

    <ul class="docs">
        <li><a href="packaging/artifacts">Artifacts</a></li>
        <li><a href="tests/unit-tests">Unit Tests</a></li>
        <li><a href="tests/build-reports">Reports</a></li>
        <li><a href="/docs/buildmaster/administration/configuration-variables">Variables</a></li>
        <li><a href="/docs/buildmaster/releases/notes">Notes</a></li>
    </ul>
	
    <div class="attention best-practice">
        <p>
            Note: between BuildMaster v5.0 and v6.1, a build was known
            as a "release package"
        </p>
    </div>

    <h2 id="creating-a-build" data-title="Creating a Build">Creating a Build</h2>
    <p>
        Builds may be created via the following methods:
    </p>
    <ul class="docs">
        <li>"Create Build" button in the UI</li>
        <li>Release &amp; Build API</li>
        <li>
            <a href="continuous-integration">Automatically via Continuous Integration</a>
        </li>
    </ul>
    <p>
        In order a create a build, at least one release must exist
        for an application. When creating a build from UI, there are at minimum three initial
        options:
    </p>
    <ul class="docs">
        <li>
            <b>Release</b> – the release that the build is associated with;
            this will inherit the pipeline and prompt for the appropriate
            <a href="/docs/buildmaster/releases/templates">release template variables</a> upon creation
        </li>
        <li>
            <b>Build number</b> - this is an integer that uniquely identifies
            a build within a release, the default value will sequentially follow the current
            latest build's number
        </li>
        <li>
            <b>Automatically advance to first stage</b> - when checked, the
            build will be automatically deployed to its first stage of the release
            pipeline; this is a common workflow in BuildMaster, as the first stage
            typically adds artifacts to the build. However, if there are deployment
            variables required, approvals, or deployment windows for the first stage, advancement
            must occur after the build is created
        </li>
    </ul>

    <h2 id="deploying-a-build" data-title="Deploying a Build">Deploying a Build</h2>

    <p>
        The release's <a href="pipelines">pipeline</a> determines where
        the build will be deployed, as well as what approvals are required before
        deploying to each stage.
    </p>
    <p>
        <img class="screenshot" src="/resources/documentation/buildmaster/6/deploy-builds.png" />
    </p>
    <p>
        Clicking on one of the stages in the build's pipeline status
        will present one of the following dialogs:
    </p>

    <ul class="docs">
        <li>
            <b>Deploy Build </b>- if a build was successfully deployed to the
            previous stage and meets all approval requirements, you can deploy the build to
            that stage
        </li>
        <li>
            <b>Force Build </b>- if a build was not successfully deployed to
            the previous stage, or if it doesn't have the requisite approvals, you can
            force the build to that stage
        </li>
        <li>
            <b>Re-deploy Build</b> - if a build has already been successfully
            deployed to that stage, you can redeploy it at any time; this is how you
            perform a rollback of a build
        </li>
    </ul>

    <p>
        You can use <a href="/docs/buildmaster/administration/users-and-security">Security and Access Controls</a>
        to determine which users can perform these actions for which environments.
    </p>

    <h2>Status and Lifecycles</h2>
    <p>
        A build has three possible statuses:
    </p>

    <ul class="docs">
        <li>
            <b>Active</b> - progressing through its pipeline with the
            possibility of being deployed to the final stage
        </li>
        <li>
            <b>Deployed</b> - successfully deployed to the final stage of its
            pipeline
        </li>
        <li>
            <b>Rejected</b> - not deployed to its final stage, and instead
            determined to be inadequate or otherwise inappropriate for the final stage
        </li>
    </ul>

    <p>
        When a build is successfully deployed to the final stage of
        its pipeline, both the release and build status is automatically changed to <b>Deployed</b>.
        This is controlled by the pipeline, and can be configured to behave
        differently.
    </p>

    <p>
        Users may manually reject builds and, depending on pipeline
        configuration, builds may automatically be rejected if another build enters the
        same stage. Administrators may also change build status at any time, however, this
        should only be done in exceptional situations such as to "unreject" an
        accidentally-rejected build or correct other mistakes.
    </p>
    
</body>
</html>