<html>
<head>
    <title>Unit Tests</title>
    <meta name="subtitle" content="Unit Tests" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="buildmaster, releases, builds, unit-tests" />
    <meta name="show-headings-in-nav" content="true" />
    <meta name="sequence" content="200" />

</head>
<body>

    <p>
        Unit tests are one of the earliest stages of automated testing that occurs during a build and deployment pipeline
        and are typically executed by a third-party tool or framework such as Visual Studio, NUnit, and others. In BuildMaster,
        unit tests are run using special operations in a deployment plan, and the results are recorded and associated with
        the build in context.
    </p>
    <p>
        Unit tests runs are organized into "groups", a convenient mechanism to separate results of different test projects,
        consolidate common tests for historical comparison, or identify specific tests to use in a 
        <a href="#pipeline-stage-approval">pipeline stage approval</a>.
    </p>
    
    <h3 id="running-tests" data-title="Running Unit Tests">Running Unit Tests</h3>
    <p>
        Unit tests are run and recorded using specific operations depending on the unit test framework. The following test
        frameworks are supported by BuildMaster through the following extensions and operations:
    </p>
    
    <table>
        <thead>
            <tr>
                <th>Framework</th>
                <th>Extension</th>
                <th>Operation</th>
                <th>GitHub</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Visual Studio Test</td>
                <td><a href="/den/inedox/windowssdk">Windows SDK</a> <i>(formerly MSTest)</i></td>
                <td><code>Execute-VSTest</code></td>
                <td><a href="https://github.com/inedo/inedox-windowssdk">source</a> | <a href="https://github.com/inedo/inedox-windowssdk/wiki">docs</a></td>
            </tr>
            <tr>
                <td>NUnit</td>
                <td><a href="/den/inedox/nunit">NUnit</a></td>
                <td><code>Execute-NUnit</code></td>
                <td><a href="https://github.com/inedo/inedox-nunit">source</a> | <a href="https://github.com/inedo/inedox-nunit/wiki">docs</a></td>
            </tr>
            <tr>
                <td>JUnit</td>
                <td><a href="/den/inedox/java">Java</a></td>
                <td><code>Execute-JUnit</code></td>
                <td><a href="https://github.com/inedo/inedox-java">source</a> | <a href="https://github.com/inedo/inedox-java/wiki">docs</a></td>
            </tr>
        </tbody>
    </table>
    <p>
        For instructions on usage of a specific unit test operation, visit the auto-generated documentation in your
        BuildMaster instance, or the associated extension's GitHub wiki.
    </p>

    <h3 id="pipeline-stage-approval" data-title="Pipeline Stage Approval">Pipeline Stage Approval</h3>
    <p>
        To prevent a build with any failing unit tests from being deployed to a pipeline stage, add a "Unit Test"
        automated approval to the target stage. This approval will validate that tests recorded in the latest execution to the
        previous pipeline stage either all passed or none failed, where inconclusive tests are dependent upon the
        approval's configuration.
    </p>

    <h3 id="viewing-results" data-title="Viewing Results">Viewing Test Results and History</h3>
    <p>
        Any executed tests are recorded and displayed on the overview page of their associated build, organized
        by group. Logs and history for specific tests are available on the Unit Test Details page.
    </p>

    <h4>Custom Unit Tests</h4>
    <p>
        Because operations are extensible, it is relatively easy to create custom operations for any unit test
        framework. For examples, see the <a href="https://github.com/inedo">source code</a> for any of the Inedo supported extensions, and the
        <a href="https://inedo.com/support/sdk-reference/inedosdk/Inedo.Agents/IUnitTestRecorder"><code>IUnitTestRecorder </code>documentation</a> of the Inedo.SDK.
    </p>

</body>
</html>