<html>
<head>
    <title>Overview</title>
    <meta name="subtitle" content="Execution Engine" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="buildmaster,excecution-engine" />
    <meta name="sequence" content="100" />
</head>
<body>

    <p>
        To deploy your applications and releases, BuildMaster uses an advanced execution engine
        that's capable of running thousands of different operations and scripts on thousands of different servers.
       
    </p>
    <p>
        While BuildMaster's execution engine is an integral part of BuildMaster itself, the core engine was designed to be shared across products,
        and is also used in <a href="/otter">Otter</a> (our Infrastructure as Code tool) and <a href="/support/documentation/otter/reference/romp">Romp</a> (a stand-alone, command-line tool).
    </p>

    <h2 id="operations" data-title="Operations">Operations</h2>
    <p>
        Operations are the tasks that the execution engine will run on a server. BuildMaster ships with dozens of <a href="../reference/operations">built-in operations</a> and
        <!--there are a number of extensions available that add even more. You --> you can add more through <a href="../administration/extensions">BuildMaster Extensions</a>, to see a list of all of our extensions head over to the <a href="/den">Inedo Den</a>.
    </p>
    <p>
        Some operations are quite simple (Sleep), while others are quite complex (Synchronize Files across Servers). Through a combination of Operations, Scripts, Variables, and Blocks, you will
        be able to model any plan to deploy an application to an environment.
    </p>

    <h2 id="otter-script" data-title="OtterScript in BuildMaster">OtterScript in BuildMaster</h2>
    <p>
        <a href="/support/documentation/otter/reference/otter-script">OtterScript</a> is a Domain-Specific Language that was designed in tandem with the execution engine to represent
        <a href="/support/documentation/otter/core-concepts/plans#configuration">configuration plans</a> and
        <a href="/support/documentation/otter/core-concepts/plans#orchestration">orchestration plans</a> in Otter,
        and <a href="../core-concepts/deployment-plans">deployment plans</a> in BuildMaster.
    </p>
    <p>
        You really don't need to learn OtterScript; it's simply the textual representation of a plan, and plans are already fully editable in the   drag-and-drop plan editor.
        If you switch back-and-forth between visual and code modes, you'll probably learn it on your own, but it's also pretty well documented.

    </p>
    <ul class="docs">
        <li><a href="/support/documentation/otter/reference/otter-script">OtterScript Overview</a>
        <ul class="docs">
            <li><a href="/support/documentation/otter/reference/otter-script/comments-and-descriptions">Comments &amp; Descriptions</a></li>
            <li><a href="/support/documentation/otter/reference/otter-script/formal-grammar">Formal Grammar</a></li>
            <li><a href="/support/documentation/otter/reference/otter-script/formal-specification">Formal Specification</a></li>
            <li><a href="/support/documentation/otter/reference/otter-script/strings-and-literals">Strings &amp; Values</a></li>
        </ul>
        </li>
    </ul>
    
    <h2 id="legacy" data-title="Legacy Execution Engine">Legacy Execution Engine</h2>
    <p>
        BuildMaster also includes a separate, side-by-side execution engine that is used to run deployment plans developed prior to v5. Although the legacy engine will be indefinitely supported, we don't
        recommend using it for new applications/plans.
    </p>
    <p>
        The documentation in this section will not focus on the legacy engine, but <a href="/support/kb/1107">KB#1107 - Importing BuildMaster v4 Deployment Plans</a> contains plenty of details on the
        differences, as well as migration strategies.
    </p>

</body>
</html>