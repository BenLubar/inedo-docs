<html>
<head>
    <title>Configuration Variables </title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="buildmaster,variables,executions" />
    <meta name="show-headings-in-nav" content="true" />
    <meta name="sequence" content="20" />
</head>
<body>


    <h2 id="value-renderers" data-title="Custom Value Renderers">Custom Value Renderers</h2>
    <p>
        Variable value renderers are used to control or modify how a specific variable's value is rendered on
        an overview page. This can be used to support use-cases such as:
    </p>
    <ul>
        <li>Linking to another page within BuildMaster</li>
        <li>Linking to an external tool</li>
        <li>Displaying a subset of properties of a map</li>
        <li>Adding customized styles or images to a value</li>
        <li>Cleanup of names that are too long or unreadable</li>
    </ul>
    <p>
        A value renderer may be specified at the system, application group, or application level, and
        applies to variables displayed on the following pages:
    </p>
    <ul>
        <li>Build overview</li>
        <li>Release overview</li>
        <li>Application settings</li>
        <li>Pipeline details</li>
    </ul>
    <h3>Adding a Custom Renderer</h3>
    <p>
        To add a custom renderer, visit the Administration &gt; Variables &gt; Value Renderers tab, and enter the
        name and scope of the variable that will use the custom renderer.
    </p>
    <p>
        Only <a href="#legacy">non-legacy variables</a> are considered when applying a value renderer. Additionally, variables denoted as
        <a href="#sensitive">sensitive</a> in the UI will be rendered as <i>(hidden)</i> regardless if a value renderer matches or not.
    </p>

    <h3>Value Renderer Format</h3>
    <p>
        A value renderer is specified as HTML. The rendered HTML also considers variable functions
        in context, including for example: <code>$BuildNumber</code>, <code>$Substring(...)</code>, and <code>$ApplicationName</code>.
        To access the variable's value within the renderer itself, use <code>$Value</code> (or <code>@Value</code>/<code>%Value</code> depending on type).
    </p>
    <div class="attention technical">
        <img src="/resources/images/icons/technical.png" />
        <p>
            Because values are rendered as HTML, BuildMaster administrators (i.e. you) are responsible for ensuring
            that values are either fully-trusted (i.e. only trusted parties create safe values), or that they are properly
            sanitized to prevent Cross Site Scripting attacks, malformed HTML, and more. A number of
            helpful functions are included in the InedoCore extension to mitigate these risks such as <code>$HtmlEncode()</code>,
            <code>$UrlEncode()</code>, and <code>$JsEncode()</code>.
        </p>
    </div>

    <h4>Examples</h4>
    <inedo:tab-block>
        <tab name="Simple Substring">
            <div>
                <code><pre>$Substring($Value, 0, 10)...</pre></code>
            </div>
            <p>
                <b>Initial value:</b> <code>This value is too long to fit on the page</code>
            </p>
            <p>
                <b>Rendered as:</b> <code>This value...</code>
            </p>
        </tab>
        <tab name="3-property Map">
            <div>
                <code><pre>&lt;a href="%Value.Href?queryData=$UrlEncode(%Value.Data)"&gt;$HtmlEncode(%Value.Text)&lt;/a&gt;</pre></code>
            </div>
            <p>
                <b>Initial value:</b> <code>%(Text: Some link text..., Href: https://example.org, Data: "some string")</code>
            </p>
            <p>
                <b>Rendered as:</b> <code><a href="https://example.org?queryData=some+string">Some link text...</a></code>
            </p>
        </tab>
        <tab name="Custom Image">
            <div>
                <code><pre>&lt;img style="max-width: 150px;" src="/resources/images/logos/proget-logo.png" alt="ProGet Logo" title="$HtmlEncode($Value)" /&gt;</pre></code>
            </div>
            <p>
                <b>Initial value:</b> <code>Some text that appears on hover</code>
            </p>
            <p>
                <b>Rendered as:</b> <code><img style="max-width: 150px;" src="/resources/images/logos/proget-logo.png" alt="ProGet Logo" title="Some text that appears on hover" /></code>
            </p>
        </tab>
    </inedo:tab-block>

    <p>
        For other examples, see the examples section in the
        <a href="/support/documentation/buildmaster/core-concepts/builds-and-ci#variable-value-renderers">Builds &amp; Continuous Integration</a>
        documentation.
    </p>

</body>
</html>