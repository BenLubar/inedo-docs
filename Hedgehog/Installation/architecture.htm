<html>
<head>
    <title>Architecture &amp; Components</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="hedgehog, packages, architecture, components" />
    <meta name="sequence" content="300" />
</head>
<body>
    <p>
        Hedgehog is comprised of several different components, which may be installed on different
        servers. See the <a href="/docs/hedgehog/installation/installation-guide">Installation guide</a> for more details.
    </p>

    <img src="/resources/documentation/hedgehog/a-c-diagram.png" alt="Diagram" />  

    <h2 id="web-application">Web Application</h2>
    <p>
        This is how most users will interact with Hedgehog on a day-to-day basis, and 
        manages the releases, projecs, pipelines, plans, security, users, etc., and also hosts the API.
    </p>
    <p>
        It is a standard ASP.NET application, and administrators familiar with IIS may
        tweak the application pool settings as needed. 
    </p>
    <div class="attention technical">
        <img src="/resources/images/icons/technical.png" />
        <p>
            Note that modifying the <code>web.config</code> file for
            any purpose other than to change the database connection string or encryption key is not at all supported.
        </p>
    </div>
    <h2 id="service">Service</h2>
    <p>
        This runs in the background and actually runs your <a href="/docs/hedgehog/deliver-deploy/deployment-plans">deployment plans</a> using the
        <a href="/docs/hedgehog/deliver-deploy/execution-engine">execution engine</a>.   It's a standard
        <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms685141(v=vs.85).aspx" target="_blank">Windows Service Application</a>,
        and may be managed and configured using the Windows Service Manager or <code>sc.exe</code> as you see fit.
    </p>
    <div class="attention technical">
        <img src="/resources/images/icons/technical.png" />
        <p>
            Note that modifying the <code>Hedgehog.Service.config</code> file for
            any purpose other than to change the database connection string or encryption key is not at all supported.
        </p>
    </div>
    
    <p>
        The Service page details how to administer this further.
    </p>


    <h2 id="database">Database</h2>
    <p>
        This persists all of the release data, execution logs, pipelines, users, etc.
    </p>
    <p>
        It is a standard SQL Server database, and administrators familiar with SQL Server may
        tweak the database settings as needed. 
    </p>
    <h3>Encryption</h3>
    <p>
        Sensitive data, most notably <a href="/docs/hedgehog/global-components/resource-credentials">resource credentials</a>, are encrypted before being stored.
        Obviously, the encryption key is <em>not</em> stored in the database, but in both the <code>web.config</code> file
        (used by the <em>web application</em>) and the <code>Hedgehog.Service.config</code> file (used by the service).
    </p>
    <h3>Reporting</h3>
    <p>
        Experienced users are welcome to query data from the various tables, and sensitive information 
        <a href="/docs/hedgehog/global-components/resource-credentials">resource credentials</a> are stored encrypted, and
        can only be decrypted by the service account.
        The tables/columns should be fairly 
        obvious once you're familiar with the software, and <a href="/support/ticket">we can answer</a> any questions
        you may have about the data or relations.
    </p>
    <div class="attention technical">
        <img src="/resources/images/icons/technical.png" />
        <p>
            We do not support trying to modify any of the data in the tables directly.
            Instead, use the API or the non-internal Stored Procedures.
        </p>
    </div>

    <h2 id="agents">Agents</h2>
    <p>
        Agents are a lightweight service that are installed on remote servers that you want to configure and orchestrate.
        They use a highly-optimized and resilient protocol, and are secured (by default) using a FIPS-compliant symmetric 
        AES encryption scheme.
    </p>
    <p>
        Agents may also be configured to use SSL instead of built-in AES, see <a href="/support/kb/1040">KB#1040</a> for those instructions.
    </p>
</body>
</html>