<html>
<head>
    <title>Rafts</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="otter,rafts" />
    <meta name="sequence" content="500" />
    <meta name="show-headings-in-nav" content="false" />
</head>
<body>
    <div class="attention technical">
        <p>
            <b>Rafts are an advanced feature.</b> If you are just getting started with Otter, you should revisit this topic once
            you've familiarized yourself with the other components.
        </p>
    </div>
    <p>
        <a href="../core-concepts/plans">Plans</a> and <a href="../core-concepts/assets">Assets</a> are essentially just files,
        and to make sharing, versioning, branching, etc. possible, Otter uses a <b>raft</b> to store
        these files. A raft is sort of an abstracted file system, specifically designed for Otter plans and assets.
    </p>

    <h2 id="default" data-title="Default Raft">The Default Raft</h2>
    <p>
        Because you likely won't need multiple rafts right away, a raft named "Default" is automatically created when you
        install Otter. This is a <a href="#raft-repository-types">Database</a> raft and is backed up when you do
        a regular  <a href="/support/documentation/otter/installation/backing-up">Back-up of Otter</a>.
    </p>
    <p>
        If you only have a single raft configured, and that raft is named "Default", then the ability to filter or
        select rafts will not be exposed on plan, job, asset, server, etc. pages.
    </p>
    <h2 id="managing-rafts" data-title="Managing Rafts">Creating, Managing, and Downloading Rafts</h2>
    <p>
        You can create, manage, and download a raft as a zip file by going to Admin &gt; Global Components &gt; Rafts.
    </p>
    <p>
        <img class="screenshot" src="/resources/documentation/otter/Otter-raft.png" alt="Otter Raft " />
    </p>
    <h3 id="rafts-environments" data-title="Rafts and Environments">Rafts and Environments</h3>
    <p>
        When a raft is associated with an <a href="/support/documentation/otter/modeling-infrastructure/environments">Environment</a>, access to contents within the raft will be restricted in two ways:
    </p>
    <ul class="docs">
        <li><b>Users</b> without appropriate privileges for the environment will be unable to access the contents (depending on <a href="/support/documentation/otter/administration/security">Privilege Configuration)</a></li>
        <li><b>Servers</b> not associated with that environment will raise an error when attempting to access any aspect of the raft</li>
    </ul>

    <h3 id="rafts-servers" data-title="Rafts and Servers/Roles">Rafts and Servers/Roles</h3>
    <p>
        Both <a href="../core-concepts/servers">Servers</a> and <a href="../modeling-infrastructure/server-roles">Server Roles</a>
        may be associated with a raft. When a raft is specified, the corresponding configuration plan will be persisted within that
        raft. If no raft is specified, then the "Default" raft (if one is named that) is used.
    </p>
    <p>
        Because rafts can be modified external to Otter, it's possible to create "orphaned" <a href="/support/documentation/otter/core-concepts/plans#configuration">Configuration Plans</a> that are not associated
        with a server or server role in Otter. Those are simply ignored, but are still displayed on the configuration plans page.
    </p>

    <h2 id="raft-repository-types" data-title="Raft Types">Raft Repository Types</h2>
    <p>
        Rafts rely on an <a href="../administration/extensions">Extensible Raft Provider</a> to retrieve and store raft data.
        There are three built-in raft types:
    </p>
    <ul class="docs">
        <li>
            <b>Database</b> - this is the default raft provider, and persists all information in Otter's database; the contents are versioned, and it's the simplest to use and back-up as part of the Otter database
        </li>
        <li>
            <b>Disk</b> - the raft is persisted as a simple file structure on disk; this may be appropriate for quick
            testing purposes
        </li>
        <li id="git-repository">
            <b>Git</b> - this raft is synchronized with a branch of a remote Git repository. See <a href="/support/documentation/otter/global-components/rafts/git-rafts">Git-Based Rafts</a> to learn how to use this type of raft.
        </li>
    </ul>

    <h2 id="disk-layout" data-title="Raft Layout">Disk Layout Conventions</h2>
    <p>When stored on disk, in source control, or exported as a zip file, rafts are laid-out as follows.</p>
    <table>
        <tr>
            <td>Orchestration Plans</td>
            <td>Files (<code>.otter</code>) within the <code>/plans</code> subdirectory</td>
        </tr>
        <tr>
            <td>Server Plans</td>
            <td>Files (<code>.otter</code>) within the <code>/servers</code> subdirectory</td>
        </tr>
        <tr>
            <td>Server Role Plans</td>
            <td>Files (<code>.otter</code>) within the <code>/roles</code> subdirectory</td>
        </tr>
        <tr>
            <td>Variables</td>
            <td>
                An OtterScript stored in the <code>/variables</code> file, consisting entirely of
                assign variable statements
            </td>
        </tr>
        <tr>
            <td>Scripts</td>
            <td>Files (<code>.ps1</code>, <code>.js</code>, <code>.sh</code>) within the <code>/scripts</code> subdirectory</td>
        </tr>
        <tr>
            <td>Modules</td>
            <td>Files (<code>.otter</code>) within the <code>/modules</code> subdirectory</td>
        </tr>
        <tr>
            <td>Assets</td>
            <td>Files within the <code>/files</code> subdirectory</td>
        </tr>
    </table>

    <h3 id="raft-variables" data-title="Raft Variables">Raft Variables</h3>
    <p>
        Variables persisted within a raft are not currently displayed anywhere in the UI, and are intended to be used for
        storing default or fallback values for plans stored in portable/reusable rafts. They are the lowest scope, and are
        only used if a <a href="configuration-variable">Configuration Variable</a> of the same name does not exist
    </p>
</body>
</html>