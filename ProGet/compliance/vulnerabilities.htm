<html>
<head>
    <title>Vulnerability Scanning and Blocking</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="sequence" content="100" />
    <meta name="subtitle" content="Vulnerability Scanning and Blocking" />
    <meta name="keywords" content="proget, vulnerabilities" />
    <meta name="display-child-topics" content="false" />
</head>
<body>
    <p>
            When you incorporate third-party, open-source packages into your applications, you also incorporate those packages' security vulnerabilities.
    </p>


    <p>
            Fortunately, security researchers are constantly inspecting these packages and publishing vulnerabilities they find in public security databases, such as the <a href="https://nvd.nist.gov/">National Vulnerability Database.</a> This allows both package authors and consumers to fix and patch as needed.
    </p>


    <p>
            Unfortunately, managing vulnerabilities as a consumer is challenging, especially as an enterprise. Even if you were to carefully assess each third-party package for known vulnerabilities before allowing its use in applications, new security vulnerabilities are discovered all the time. This means you would need to constantly reassess all third-party packages for new security vulnerabilities.
    </p>

    <p>
            This is where ProGet's vulnerability scanning and blocking comes in. 
        </p>
    <p class="info">This feature is available in paid and trial ProGet editions.</p>
        <p>
        We partner with two leading vulnerability scanning companies – Sonatype (OSS Index) and WhiteSource – to automatically scan third-party packages against vulnerability databases. You can also manually manage your vulnerabilities.
    </p>
   <h2>
     Vulnerability Scanning and Blocking Workflows
</h2>
<p>
    ProGet supports three different workflows for managing vulnerabilities

</p>
<table>
        <thead>
            <tr>
                <th></th>
                <th>Manual</th>
                <th>OSS Index</th>
                <th>WhiteSource</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Cost</td>
                <td>-</td>
                <td>
                   -
                </td>
                <td> $$$</td>
            </tr>
            <tr>
                <td>Thoroughness</td>
                <td>*</td>
                <td>
                    ***
                </td>
                <td>
                    *****
                </td>

            </tr>
            <tr>
                <td>Block vulnerable packages</td>
                <td>	&#10004;</td>
                <td>
                    	&#10004;
                </td>
                <td>
                    	&#10004;
                </td>
            </tr>
            <tr>
                    <td>Manually enter vulnerability reports</td>
                    <td>	&#10004;</td>
                    <td>
                        -
                    </td>
                    <td>
                        -
                    </td>
                </tr>
                <tr>
                        <td>Assess vulnerability report within ProGet</td>
                        <td>	&#10004;</td>
                        <td>
                            	&#10004;
                        </td>
                        <td>
                            -
                        </td>
                    </tr>
                    <tr>
                            <td>Automatically scan public databases</td>
                            <td>-</td>
                            <td>
                                    &#10004;
                            </td>
                            <td>
                                	&#10004;
                            </td>
                        </tr>
                        <tr>
                                <td>Scan proprietary databases</td>
                                <td>-</td>
                                <td>
                                    -
                                </td>
                                <td>
                                    	&#10004;
                                </td>
                            </tr>
                            <tr>
                                    <td>Requires subscription </td>
                                    <td>-</td>
                                    <td>
                                        -<sup>R</sup>
                                    </td>
                                    <td>
                                            <a href="https://www.whitesourcesoftware.com/trial3/">Sign Up</a>
                                        </td>
                                </tr>

        </tbody>
    </table>
    <p>
        <sup>R</sup>While OSS Index doesn't require a paid subscription, users will need to create a <a href="https://ossindex.sonatype.org/ ">registered account</a>.
    </p>
    <p>
            See <a href="/support/documentation/proget/compliance/vulnerabilities/vor">Integrating ProGet with OSS Index</a> and <a href="/support/documentation/proget/compliance/whitesource">Integrating ProGet with WhiteSource</a> documentation for more details on those workflows.
    </p>
    <h2>
        Feeds and Vulnerability Configuration
    </h2>
    <p>
            A feed must be explicitly configured to use vulnerability scanning and blocking. While the end result is the same, the workflows use different features within ProGet:
    </p>
    <ul class="docs">
        <li><b>Vulnerability sources</b> are used for manually-and OSS Index- managed workflows; these add vulnerability records into ProGet which you must assess</li>
        <li><b>Package access rules</b> are used for WhiteSource-managed workflows; these block package downloads based on rules configured in WhiteSource</li>
    </ul>
    <p>
            You can configure both on the Manage Feed page. If you don't see OSS Index as a vulnerability source, or WhiteSource as a package access rule, check Admin > Extensions to make sure those extensions are installed.
    </p>
    <h2>
            Vulnerability Reports and Assessments in ProGet
    </h2>
    <p>
            Both the manual and OSS Index workflows use vulnerability reports, which essentially identify that a particular package, or versioned range of packages, has a known vulnerability. This record is either manually entered, or is imported from OSS Index, based on packages in a particular feed.
    </p>
    <p>
            All newly entered or imported vulnerability reports are considered unassessed, which means that packages matching the vulnerability will be blocked until the report is assessed.  An assessment involves an authorized user reviewing the report, choosing an assessment type (Ignore, Caution, Block), and leaving an optional comment.
    </p>
    <img class="screenshot" alt="Assessment workflow" src="/resources/documentation/proget/assess-workflow.png"/>
    <h3>
        Assessment Expiry
    </h3>
    <p>
            Depending on the assessment type, the assessment may expire; this means that, unless it's reassessed, the vulnerability report will be considered unassessed after expiry.
    </p>
    <p>
            This can be useful to temporarily allow a package, or to review usage of packages after a certain amount of time.
    </p>
    <h3>
            Custom Assessment Types
    </h3>
    <p>
            ProGet comes with three built-in assessment types:
    </p>
    <ul class="docs">
        <li><b>Ignore</b>; indicates that the vulnerability report is not applicable or irrelevant, and therefore allows for packages to be downloaded</li>
        <li><b>Caution</b>; developers should be careful to avoid the vulnerability; packages may be downloaded, but a warning is issued on the web ui</li>
        <li><b>Blocked</b>; vulnerability is too severe to allow use, and packages are prevented from being downloaded</li>
    </ul>
    <p>
            You can edit or create your own assessment type, specifying a name, expiry date, severity (color), and whether or not packages would be blocked.
    </p>
</body>
</html>
