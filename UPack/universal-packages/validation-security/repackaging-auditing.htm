<html>
<head>
    <title>Repackaging &amp; Auditing</title>
    <meta name="subtitle" content="Repackaging &amp; Auditing" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="proget, universal-packages" />
    <meta name="sequence" content="10" />
    
</head>
<body>
    
    <p>
        Packages work at their best when they are read-only and cryptographically verified, but this means that
        you can't change any of the package metadata (including the version number) without "tampering" with the package.
    </p>

    <div class="attention best-practice">
        <img src="/resources/images/icons/best-practices.png" />
        <p>
            For example, if you have a pre-release package (HDars.Web:1.4.5-rc.2), but just want to "change" the version, then you will have created a new package. If you change a different piece of metadata (such as the author name), then you've created a very confusing situation where two different files are apparently the same package.
        </p>
    </div>


    <p>
        This is where repackaging comes in: it's an operation that involves changing a small part of package metadata (such as the version number)  without
        altering the contents, while retaining a "pointer" to the original package inside the newly created package. Of course, this operation can only be performed 
        by a trusted person or service to ensure that the repackaging is securely performed.
    </p> 
    <p>
        The universal packaging <a href="/support/documentation/upack/universal-packages/metacontent-guidance/manifest-specification">manifest file</a> allows for storing a chain of repackaging events that allow you to verify each preceding package.
    </p>

   
</body>
</html>