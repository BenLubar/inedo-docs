<html>
<head>
    <title>Validation &amp; Security</title>
    <meta name="subtitle" content="Validation &amp; Security" />
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="keywords" content="proget, universal-packages" />
    <meta name="sequence" content="30" />
    
</head>
<body>

    <p>
        A Universal Package is intended to be read-only, and once created, its contents and metacontents sealed within the package, untampered.
        However, the simple format of a Universal Package makes it easy to tamper with its contents using nothing more than a zip file editor.
    </p>
    <p>
        This is where cryptographic hashing comes in. It is a small string of text that acts as a "thumbprint" of a file and lets you verify that,
        after you've downloaded "Accounts/HDars v1.3.4" from a package source, you can be certain it's the file you expect.
    </p>
    <p>
        Because a package's hash is calculated from the bytes of the package file, it is impossible to store a package's hash inside of that package, 
        since changing the package would change its hash. For this reason, a trusted package source should be used to verify the hash of the package.
    </p>
    <p>
        However, a package <a href="/support/documentation/upack/universal-packages/metacontent-guidance/manifest-specification">manifest file</a> may reference 
        other packages' hashes in the <code>dependencies</code> and <code>repackageHistory</code> properties.
    </p>
    <h4 id="package-hash-format">Package Hash Format</h4>
    <p>
        Package hashes are calculated using the SHA-1 algorithm, and encoded visually as a 40-character case-insensitive string of hexidemical digits without spaces or other
        separator characters. For example: <code>2660bf74fc8147ca41bd53bdb1defc3aae35bc91</code>
    </p>
    
</body>
</html>